/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formsejercicio02;

import Classes.Entrega;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.text.DateFormat;
import java.util.HashSet;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LuisD
 */
public class Entregas extends javax.swing.JFrame {
    
    /**
     * Creates new form Entregas
     */
    ArrayList<Entrega> lRealizados = new ArrayList<>();
    ArrayList<Entrega> lProgramados = new ArrayList<>();
    double ganancias;
    String destino;
    String fecha;
    String[] datos = new String[2];
    DefaultTableModel Realizados;
    DefaultTableModel Programados;
    DateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
    
    public void ActualizarRealizados(String ganancia, String destino, String fecha) {
        try {
            double ganar = Double.parseDouble(ganancia);
            Date pfecha = formato.parse(fecha);
            Entrega Nuevo = new Entrega(ganar, destino, pfecha);
            lRealizados.add(Nuevo);
        }catch (Exception e) {}
    }
    
    public Entregas() {
        initComponents();
        cbbSearchday.setVisible(true);
        cbbSearchmonth.setVisible(true);
        cbbSearchyear.setVisible(true);
        lblSearchganancia.setVisible(false);
        txtSearchganancia.setVisible(false);
        cbbSearchdestino.setVisible(false);
        Realizados = (DefaultTableModel) this.tblRealized.getModel();
        Programados = (DefaultTableModel) this.tblProgramed.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRealized = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cbbDays = new javax.swing.JComboBox<>();
        cbbMonths = new javax.swing.JComboBox<>();
        cbbYears = new javax.swing.JComboBox<>();
        cbbDestiny = new javax.swing.JComboBox<>();
        txtGananciasexpect = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnGenerar = new javax.swing.JButton();
        btnProgramar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        lblSeg = new javax.swing.JLabel();
        lblMicroseg = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblProgramed = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        cbbSearchmode = new javax.swing.JComboBox<>();
        cbbSearchday = new javax.swing.JComboBox<>();
        cbbSearchmonth = new javax.swing.JComboBox<>();
        cbbSearchyear = new javax.swing.JComboBox<>();
        cbbSearchdestino = new javax.swing.JComboBox<>();
        txtSearchganancia = new javax.swing.JTextField();
        lblSearchganancia = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        txtNgeneracion = new javax.swing.JTextField();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Entregas Realizadas");

        tblRealized.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        tblRealized.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"05/03/2021", "Santa Ana (60 km)", "$2000"},
                {"05/03/2021", "Sonsonate (60 km)", "$1400.77"},
                {"06/03/2021", "Santa Ana (60 km)", "$1400.77"}
            },
            new String [] {
                "Fecha", "Destino", "Ganancias"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblRealized);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Programar Entregas");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("Fecha:");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Destino:");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Ganancias:");

        cbbDays.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cbbDays.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "" }));

        cbbMonths.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cbbMonths.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        cbbMonths.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbMonthsActionPerformed(evt);
            }
        });

        cbbYears.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cbbYears.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2021", "2022", "2023" }));

        cbbDestiny.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cbbDestiny.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Santa Ana (60 km)", "San Salvador (170 km)", "La Libertad (210 km)", "Sonsonate (60 km)" }));

        txtGananciasexpect.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setText("$");

        btnGenerar.setText("Generar Automaticamente");
        btnGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarActionPerformed(evt);
            }
        });

        btnProgramar.setText("Programar Entrega");
        btnProgramar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProgramarActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel7.setText("Tiempo:");

        lblSeg.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lblSeg.setForeground(new java.awt.Color(0, 153, 0));
        lblSeg.setText("0 s");

        lblMicroseg.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lblMicroseg.setForeground(new java.awt.Color(0, 153, 0));
        lblMicroseg.setText("0 ms");

        tblProgramed.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        tblProgramed.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Destino", "Ganancias Esperadas"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblProgramed);

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel8.setText("Buscar por:");

        cbbSearchmode.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        cbbSearchmode.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fecha", "Destino", "Ganancias", " " }));
        cbbSearchmode.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbSearchmodeItemStateChanged(evt);
            }
        });
        cbbSearchmode.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cbbSearchmodePropertyChange(evt);
            }
        });

        cbbSearchday.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        cbbSearchday.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "" }));

        cbbSearchmonth.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        cbbSearchmonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));

        cbbSearchyear.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        cbbSearchyear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2021", "2022", "2023" }));

        cbbSearchdestino.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        cbbSearchdestino.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Santa Ana (60 km)", "San Salvador (170 km)", "La Libertad (210 km)", "Sonsonate (60 km)" }));

        txtSearchganancia.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        lblSearchganancia.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lblSearchganancia.setText("$");

        btnSearch.setText("Buscar");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnClose.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        btnClose.setText("Cerrar");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        jLabel9.setText("Nº Entregas:");

        txtNgeneracion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtNgeneracion.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtNgeneracion.setText("1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 639, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cbbDays, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(cbbMonths, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cbbYears, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(cbbDestiny, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtGananciasexpect, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnGenerar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnProgramar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNgeneracion, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblSeg)
                                .addGap(18, 18, 18)
                                .addComponent(lblMicroseg))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbbSearchmode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cbbSearchdestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbbSearchday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbbSearchmonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbbSearchyear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblSearchganancia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSearchganancia, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cbbSearchmode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbbSearchday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbbSearchmonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbbSearchyear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbbSearchdestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearchganancia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSearchganancia)
                    .addComponent(btnSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbbDays, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbbMonths, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbbYears, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGenerar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbbDestiny, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSeg)
                    .addComponent(lblMicroseg)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9)
                    .addComponent(txtNgeneracion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtGananciasexpect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(btnProgramar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnClose)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbbMonthsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbMonthsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbMonthsActionPerformed

    private void cbbSearchmodePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cbbSearchmodePropertyChange
        
                
        
    }//GEN-LAST:event_cbbSearchmodePropertyChange

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        setVisible(false);
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarActionPerformed
        Date Inicio = new Date();
        try {
            int N = Integer.parseInt(txtNgeneracion.getText());
            Date Fecha = new Date();
            for (int i = 0; i < N; i++) {
                double GananciasEsperadas = Math.random()*2000;
                int Select = (int) Math.round(Math.random()*3);
                String destino = "";
                switch (Select) {
                    case 0: destino = "Santa Ana (60 km)"; break;
                    case 1: destino = "San Salvador (170 km)";  break;
                    case 2: destino = "La Libertad (210 km)"; break;
                    case 3: destino = "Sonsonate (60 km)"; break;
                }
                this.lProgramados.add(new Entrega(GananciasEsperadas, destino, Fecha));
            }
        }catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Debes ingresar la cantidad de Entregas a Programar", "Datos no Procesados", JOptionPane.WARNING_MESSAGE);
        }

        for (int i = 0; i < this.lProgramados.size(); i++) {
            String[] Newdata = {   formato.format(lProgramados.get(i).getFecha()), lProgramados.get(i).getDestino(), "$" + String.valueOf(lProgramados.get(i).getGanancias())  }; 
            Programados.addRow(Newdata);
        }
        Date Final = new Date();
        long duracion = Final.getTime() - Inicio.getTime();
        lblMicroseg.setText(Long.toString(duracion) + " ms");
        lblSeg.setText(Long.toString(duracion/1000) + " s");
    }//GEN-LAST:event_btnGenerarActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        int Selected = cbbSearchmode.getSelectedIndex();
        for (int t = 0; t < Realizados.getRowCount(); t++) {    
            ActualizarRealizados(Realizados.getValueAt(t,2).toString().replace("$", ""), Realizados.getValueAt(t, 1).toString(), Realizados.getValueAt(t,0).toString() );  
        }
        Realizados.setRowCount(0);
        switch (Selected) {
            case 0: 
                String fecha = cbbSearchday.getSelectedItem().toString() + "/" + cbbSearchmonth.getSelectedItem().toString() + "/" + cbbSearchyear.getSelectedItem().toString();
                try {                    
                    for (int i = 0; i < lRealizados.size(); i++) {
                        String SearchFecha = formato.format(lRealizados.get(i).getFecha());
                        if (SearchFecha.contains(fecha)) {
                            String[] FoundData = {  fecha, lRealizados.get(i).getDestino(),"$" + String.format("%.2f",lRealizados.get(i).getGanancias())  };
                            Realizados.addRow(FoundData);
                        }
                    }
                }catch (Exception e) {  JOptionPane.showMessageDialog(null, "ERROR INESPERADO: Intente nuevamente en unos instantes", "ERROR INESPERADO", JOptionPane.ERROR_MESSAGE);    }
                break;
            
            case 1:
                String destiny = String.valueOf(cbbSearchdestino.getSelectedItem());
                for (int i = 0; i < lRealizados.size(); i++) {
                    if (lRealizados.get(i).getDestino().equals(destiny)) {
                        String f = formato.format(lRealizados.get(i).getFecha());
                        String[] FoundData = { f, destiny, String.format("%.2f", lRealizados.get(i).getGanancias()) };
                        Realizados.addRow(FoundData);
                    }
                }
                break;
            
            case 2:
                boolean recorrer = true;
                int cont = -1;
                try {
                    double G = Double.parseDouble(txtSearchganancia.getText());
                    
                    while (recorrer) {
                        cont++;
                        if (lRealizados.get(cont).getGanancias() == G) recorrer = false;
                    }
                    String f = formato.format(lRealizados.get(cont).getFecha());
                    String[] FoundData = {  f, lRealizados.get(cont).getDestino(), "$" + String.format("%.2f",G)    };
                    Realizados.addRow(FoundData);
                }catch (Exception e) {  JOptionPane.showMessageDialog(null, "Datos ingresados no validos para la busquedad, ingrese nuevamente los datos y pruebe nuevamente", "Datos no Procesados", JOptionPane.WARNING_MESSAGE); }
                break;
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnProgramarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProgramarActionPerformed
        try  {
            String pf = cbbDays.getSelectedItem().toString() + "/" + cbbMonths.getSelectedItem().toString() + "/" + cbbYears.getSelectedItem().toString();
            Date pfecha = formato.parse(pf);
            double GananciasExpect = Double.parseDouble(txtGananciasexpect.getText());
            Date hoy = new Date();
            long value = pfecha.getTime() - hoy.getTime();
            if (GananciasExpect > 0 && value > 0) {
                Entrega NewP = new Entrega(GananciasExpect, cbbDestiny.getSelectedItem().toString(), pfecha);
                String[] NewProgramed = {   pf, cbbDestiny.getSelectedItem().toString(), "$" + txtGananciasexpect.getText() };
                lProgramados.add(NewP);
                Programados.addRow(NewProgramed);
            }else  JOptionPane.showMessageDialog(null,"Datos fuera de Rango, revise que la fecha y la expectativa de ganancias sea posible", "Datos Fuera de Rango", JOptionPane.WARNING_MESSAGE);
            
        }catch (Exception e) {  JOptionPane.showMessageDialog(null, "Datos ingresados no validos para el registro, ingreselos nuevamente", "Datos no Validos", JOptionPane.WARNING_MESSAGE);    }
    }//GEN-LAST:event_btnProgramarActionPerformed

    private void cbbSearchmodeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbSearchmodeItemStateChanged
        int mode = cbbSearchmode.getSelectedIndex();
        switch (mode) {
            case 0:
                cbbSearchday.setVisible(true);
                cbbSearchmonth.setVisible(true);
                cbbSearchyear.setVisible(true);
                lblSearchganancia.setVisible(false);
                txtSearchganancia.setVisible(false);
                cbbSearchdestino.setVisible(false);
                break;
                
            case 1:
                cbbSearchday.setVisible(false);
                cbbSearchmonth.setVisible(false);
                cbbSearchyear.setVisible(false);
                lblSearchganancia.setVisible(false);
                txtSearchganancia.setVisible(false);
                cbbSearchdestino.setVisible(true);
                break;
                
            case 2:
                cbbSearchday.setVisible(false);
                cbbSearchmonth.setVisible(false);
                cbbSearchyear.setVisible(false);
                lblSearchganancia.setVisible(true);
                txtSearchganancia.setVisible(true);
                cbbSearchdestino.setVisible(false);
                break;
        }
    }//GEN-LAST:event_cbbSearchmodeItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Entregas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Entregas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Entregas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Entregas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Entregas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnGenerar;
    private javax.swing.JButton btnProgramar;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> cbbDays;
    private javax.swing.JComboBox<String> cbbDestiny;
    private javax.swing.JComboBox<String> cbbMonths;
    private javax.swing.JComboBox<String> cbbSearchday;
    private javax.swing.JComboBox<String> cbbSearchdestino;
    private javax.swing.JComboBox<String> cbbSearchmode;
    private javax.swing.JComboBox<String> cbbSearchmonth;
    private javax.swing.JComboBox<String> cbbSearchyear;
    private javax.swing.JComboBox<String> cbbYears;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel lblMicroseg;
    private javax.swing.JLabel lblSearchganancia;
    private javax.swing.JLabel lblSeg;
    private javax.swing.JTable tblProgramed;
    private javax.swing.JTable tblRealized;
    private javax.swing.JTextField txtGananciasexpect;
    private javax.swing.JTextField txtNgeneracion;
    private javax.swing.JTextField txtSearchganancia;
    // End of variables declaration//GEN-END:variables
}
